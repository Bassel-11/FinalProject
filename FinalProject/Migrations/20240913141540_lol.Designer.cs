// <auto-generated />
using FinalProject.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240913141540_lol")]
    partial class lol
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinalProject.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "For human consumption",
                            Name = "Food"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Various beverages",
                            Name = "Drinks"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Clothing items",
                            Name = "Clothes"
                        },
                        new
                        {
                            CategoryId = 4,
                            Description = "Various other items",
                            Name = "Miscellaneous"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "Fresh fish",
                            ImagePath = "fish.jpg",
                            Price = 10m,
                            Quantity = 100,
                            Title = "Fish"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Description = "Fresh meat",
                            ImagePath = "meat.jpg",
                            Price = 20m,
                            Quantity = 50,
                            Title = "Meat"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            Description = "Orange juice",
                            ImagePath = "juice.jpg",
                            Price = 5m,
                            Quantity = 200,
                            Title = "Juice"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            Description = "Energy drink",
                            ImagePath = "v7.jpg",
                            Price = 3m,
                            Quantity = 150,
                            Title = "V7"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 3,
                            Description = "Cotton T-shirt",
                            ImagePath = "tshirt.jpg",
                            Price = 15m,
                            Quantity = 75,
                            Title = "T-shirt"
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 3,
                            Description = "Denim pants",
                            ImagePath = "pants.jpg",
                            Price = 25m,
                            Quantity = 60,
                            Title = "Pants"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FinalProject.Models.Product", b =>
                {
                    b.HasOne("FinalProject.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FinalProject.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
